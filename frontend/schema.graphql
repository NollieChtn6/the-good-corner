type Query {
  ads: [AdEntity!]!
  adById(id: Float!): AdEntity!
  categories: [CategoryEntity!]!
  categoryById(id: Float!): CategoryEntity!
  adsByCategory(categoryId: Float!): [AdEntity!]!
  tags: [TagEntity!]!
  users: [UserEntity!]!
  usersAsUser: [UserEntity!]!
  usersAsAdmin: [UserEntity!]!
}

type AdEntity {
  id: Float!
  title: String!
  description: String!
  owner: String!
  price: Float!
  pictureUrl: String!
  location: String!
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO
  category: CategoryEntity!
  tags: [TagEntity!]!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type CategoryEntity {
  id: Float!
  name: String!
  ads: [AdEntity!]!
}

type TagEntity {
  id: Float!
  label: String!
  ads: [AdEntity!]!
}

type UserEntity {
  id: Float!
  username: String!
  email: String!
  password: String!
  role: String!
}

type Mutation {
  createAd(adInput: AdInput!): AdEntity!
  deleteAd(id: Float!): String!
  replaceAdById(data: AdInput!, id: Float!): AdEntity!
  createUser(newUserData: NewUserInput!): String!
  loginUser(userData: UserInput!): String!
}

input AdInput {
  title: String!
  description: String!
  owner: String!
  price: Float!
  pictureUrl: String!
  location: String!
  category: ID!
  tags: [ID!]!
}

input NewUserInput {
  username: String!
  email: String!
  password: String!
}

input UserInput {
  email: String!
  password: String!
}
